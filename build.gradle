plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'idea'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

//configurations.compile {
//    exclude group: 'org.hibernate.validator', module: 'hibernate-validator'
//    exclude group: 'org.synchronoss.cloud', module: 'nio-multipart-parser'
//    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
//    exclude group: 'com.fasterxml.jackson.datatype', module: 'jackson-datatype-jsr310'
//    exclude group: 'org.yaml', module: 'snakeyaml'
//}
dependencies {
//    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'
//    testImplementation 'org.springframework.security:spring-security-test'
}

test {
    useJUnitPlatform()
}


bootRun {
    systemProperties = System.properties
    jvmArgs = [
            "-Xdebug",
            "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5016"
    ]
}